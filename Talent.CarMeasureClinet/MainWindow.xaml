<comm:Only_WindowBase x:Class="Talent.CarMeasureClient.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:VM="clr-namespace:Talent.CarMeasureClient.ViewModel"
        xmlns:myC="clr-namespace:Talent.ClientCommonLib.Controls;assembly=Talent.ClientCommonLib"
        xmlns:comm="clr-namespace:Talent.ClientCommonLib;assembly=Talent.ClientCommonLib"
        Title="计量终端主程序" Height="768" Width="1024" WindowState="Maximized"
        WindowStartupLocation="CenterScreen" 
        FontFamily="Microsoft YaHei,Arial" x:Name="mainWindow" WindowStyle="None" Topmost="False"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"  Icon="Image/汽车衡.ico"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:my="clr-namespace:Talent.CarMeasureClient.MyUC"
        xmlns:myImage="clr-namespace:Talent.CarMeasureClient.MyUC" Closing="mainWindow_Closing" StateChanged="mainWindow_StateChanged">
    <comm:Only_WindowBase.Resources>
        <VM:CarMeasureClientViewModel x:Key="MainWindowViewModel"/>
        <Style x:Key="GPRSCheckBoxStyle1" TargetType="{x:Type CheckBox}">
            <Setter Property="Width" Value="36"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#FFEE786C"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="normal">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="checked">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked"/>
                                    <VisualState x:Name="Indeterminate"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Image x:Name="normal" Stretch="Fill" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Source="Image/GPRS_unlink.png" Visibility="Visible"/>
                            <Image x:Name="checked" Stretch="Fill" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Source="Image/GPRS_link.png" Visibility="Collapsed"/>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ServerCheckBoxStyle1" TargetType="{x:Type CheckBox}">
            <Setter Property="Width" Value="36"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#FFEE786C"/>

            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="normal">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="checked">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked"/>
                                    <VisualState x:Name="Indeterminate"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Image x:Name="normal" Stretch="Fill" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Source="Image/server_unlink.png" Visibility="Visible"/>
                            <Image x:Name="checked" Stretch="Fill" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Source="Image/server_link.png" Visibility="Collapsed"/>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="10,0"/>
            <Setter Property="Height" Value="34"/>
            <Setter Property="FontFamily" Value="Arial,Microsoft YaHei"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid ToolTip="{TemplateBinding ToolTip}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{TemplateBinding Width}"/>
                            </Grid.ColumnDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="bdLeft">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFff8f6d"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="bdLeft" Grid.Column="0" CornerRadius="0" Background="#FFF77D52">
                                <ContentPresenter Margin="{TemplateBinding Padding}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TextBoxStyle1" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="Height" Value="50"/>
            <!--<Setter Property="Width" Value="120"/>-->
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="Foreground" Value="#FFFF5447"/>
            <Setter Property="Background" Value="#FF051021"/>
            <Setter Property="BorderBrush" Value="#FF384556"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border BorderThickness="1" BorderBrush="#FF667486">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="SBTalkBegin" >
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="imgTalk" RepeatBehavior="Forever">
                <EasingDoubleKeyFrame KeyTime="0" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BounceEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.3">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BounceEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <StringAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Text)" Storyboard.TargetName="txtTalk">
                <DiscreteStringKeyFrame KeyTime="0" Value="语音对讲中..."/>
            </StringAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="SBTalkStop" >
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="imgTalk">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <StringAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Text)" Storyboard.TargetName="txtTalk">
                <DiscreteStringKeyFrame KeyTime="0" Value="语音对讲关闭"/>
            </StringAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="SBMeasureBegin">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="imgMeasure" RepeatBehavior="Forever">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.001">
                    <!--原value 1-->
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BounceEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="3">
                    <!--原value 0.3-->
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BounceEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <StringAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Text)" Storyboard.TargetName="txtMeasure">
                <DiscreteStringKeyFrame KeyTime="0" Value="远程坐席处理中..."/>
            </StringAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="SBMeasureStop">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="imgMeasure">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <StringAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Text)" Storyboard.TargetName="txtMeasure">
                <DiscreteStringKeyFrame KeyTime="0" Value="远程计量"/>
            </StringAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="SBRedLineLeftBegin">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="imgRedLineLeft" RepeatBehavior="Forever">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Hidden}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:1" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="SBRedLineLeftStop">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="imgRedLineLeft">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="SBRedLineRightBegin">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="imgRedLineRight" RepeatBehavior="Forever">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Hidden}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:1" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="SBRedLineRightStop">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="imgRedLineRight">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="SBCountdown2">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="lblCountdown">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.9" Value="{x:Static Visibility.Collapsed}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:1" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:1.3" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:1.9" Value="{x:Static Visibility.Collapsed}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:2" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:2.3" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:2.9" Value="{x:Static Visibility.Collapsed}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:3" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:3.3" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:3.9" Value="{x:Static Visibility.Collapsed}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:4" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:4.3" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:4.9" Value="{x:Static Visibility.Collapsed}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:5" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:5.3" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:5.9" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:6" Value="{x:Static Visibility.Collapsed}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:6.1" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="lblCountdown">
                <EasingDoubleKeyFrame KeyTime="0" Value="2"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.9" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="2"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1.3" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1.9" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="2"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.3" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.9" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:3" Value="2"/>
                <EasingDoubleKeyFrame KeyTime="0:0:3.3" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:3.9" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:4" Value="2"/>
                <EasingDoubleKeyFrame KeyTime="0:0:4.3" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:4.9" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:5" Value="2"/>
                <EasingDoubleKeyFrame KeyTime="0:0:5.3" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:5.9" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:6" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:6.1" Value="2"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="lblCountdown">
                <EasingDoubleKeyFrame KeyTime="0" Value="2"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.9" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="2"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1.3" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1.9" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="2"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.3" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.9" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:3" Value="2"/>
                <EasingDoubleKeyFrame KeyTime="0:0:3.3" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:3.9" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:4" Value="2"/>
                <EasingDoubleKeyFrame KeyTime="0:0:4.3" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:4.9" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:5" Value="2"/>
                <EasingDoubleKeyFrame KeyTime="0:0:5.3" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:5.9" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:6" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:6.1" Value="2"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="lblCountdown">
                <EasingDoubleKeyFrame KeyTime="0" Value="-150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.9" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="-150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1.3" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1.9" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="-150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.3" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.9" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:3" Value="-150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:3.3" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:3.9" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:4" Value="-150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:4.3" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:4.9" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:5" Value="-150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:5.3" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:5.9" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:6" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:6.1" Value="-150"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="lblCountdown">
                <EasingDoubleKeyFrame KeyTime="0" Value="150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.9" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1.3" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1.9" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.3" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.9" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:3" Value="150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:3.3" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:3.9" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:4" Value="150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:4.3" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:4.9" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:5" Value="150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:5.3" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:5.9" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:6" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:6.1" Value="150"/>
            </DoubleAnimationUsingKeyFrames>
            <StringAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Text)" Storyboard.TargetName="lblCountdown">
                <DiscreteStringKeyFrame KeyTime="0:0:0.9" Value="6"/>
                <DiscreteStringKeyFrame KeyTime="0:0:1" Value="5"/>
                <DiscreteStringKeyFrame KeyTime="0:0:1.9" Value="5"/>
                <DiscreteStringKeyFrame KeyTime="0:0:2" Value="4"/>
                <DiscreteStringKeyFrame KeyTime="0:0:2.9" Value="4"/>
                <DiscreteStringKeyFrame KeyTime="0:0:3" Value="3"/>
                <DiscreteStringKeyFrame KeyTime="0:0:3.9" Value="3"/>
                <DiscreteStringKeyFrame KeyTime="0:0:4" Value="2"/>
                <DiscreteStringKeyFrame KeyTime="0:0:4.9" Value="2"/>
                <DiscreteStringKeyFrame KeyTime="0:0:5" Value="1"/>
                <DiscreteStringKeyFrame KeyTime="0:0:5.3" Value="1"/>
                <DiscreteStringKeyFrame KeyTime="0:0:5.9" Value="1"/>
                <DiscreteStringKeyFrame KeyTime="0:0:6" Value="1"/>
                <DiscreteStringKeyFrame KeyTime="0:0:6.1" Value="6"/>
            </StringAnimationUsingKeyFrames>
        </Storyboard>
    </comm:Only_WindowBase.Resources>
    <comm:Only_WindowBase.DataContext>
        <Binding Source="{StaticResource MainWindowViewModel}"/>
    </comm:Only_WindowBase.DataContext>
    <comm:Only_WindowBase.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
        </EventTrigger>
    </comm:Only_WindowBase.Triggers>
    <Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="100"/>
                <RowDefinition Height="110"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="30"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Background="{Binding TopColor, Mode=TwoWay}" Name="gridTitleBar">
                <!-- FF4040 FF0C215F {Binding TopColor, Mode=TwoWay}-->
                <Ellipse Width="10000" Height="2000" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,-1945,0,0">
                    <Ellipse.Fill>
                        <RadialGradientBrush>
                            <GradientStop Color="{Binding TopColor1, Mode=TwoWay}" Offset="0"/>
                            <!-- FF4040 FF09236E {Binding TopColor1 , Mode=TwoWay}-->
                            <GradientStop Color="{Binding TopColor2, Mode=TwoWay}" Offset="1"/>
                            <!-- FF4040 FF072C93 {Binding TopColor2 , Mode=TwoWay}-->
                        </RadialGradientBrush>
                    </Ellipse.Fill>
                </Ellipse>
                <Image Source="Image/logo.ico" Stretch="None" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="42,0,0,26"/>
                <TextBlock x:Name="txtLogoTitle"  FontSize="36" FontWeight="Bold" Foreground="#FFdceff6" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="110,0,0,0">
                    <Run Text="{Binding softName , Mode=TwoWay}"/>
                    <InlineUIContainer>
					<TextBlock x:Name="txtVer"  Foreground="Yellow" FontSize="16" />
				</InlineUIContainer>
                    </TextBlock>
                <!--<CheckBox Margin="0,5,98,0" VerticalAlignment="Top" HorizontalAlignment="Right" Style="{DynamicResource ServerCheckBoxStyle1}" ToolTip="任务服务器连接状态"/>-->
                <Image Source="{Binding IcImage, Mode=TwoWay}" Stretch="Fill"  Width="40" Height="40" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,7,170,0"/>
                <myC:StatusControl Margin="0,3,116,0" Width="48" Height="48" VerticalAlignment="Top" HorizontalAlignment="Right" ImageFalse="Image/server_unlink.png" ImageTrue="Image/server_link.png" State="{Binding TaskServerConnState,Mode=TwoWay}" ToolTip="任务服务器连接状态"/>
                <Button x:Name="btnMinForm" Margin="0,5,60,0" Visibility="Visible"  ToolTip="最小化" VerticalAlignment="Top" Style="{StaticResource MinFormButtonStyle}" HorizontalAlignment="Right" Width="40" Height="40" Content="X" Click="btnMinForm_Click"/>

                <myC:StatusControl Margin="0,5,100,0" Width="48" Height="48" VerticalAlignment="Top" HorizontalAlignment="Right" ImageFalse="Image/GPRS_unlink.png" ImageTrue="Image/GPRS_link.png" State="{Binding TaskServerConnState,Mode=TwoWay}" ToolTip="GPRS连接状态" Visibility="Hidden" />
                <!--<CheckBox Margin="20,5,50,0" VerticalAlignment="Top" HorizontalAlignment="Right" Style="{DynamicResource GPRSCheckBoxStyle1}" IsEnabled="True" IsChecked="True" ToolTip="GPRS连接状态"/>-->
                <Button x:Name="btnExit" Margin="0,5,0,0" Visibility="Visible"  ToolTip="退出系统" VerticalAlignment="Top" Style="{StaticResource ExitButtonStyle}" HorizontalAlignment="Right" Width="40" Height="40" Content="X" Click="btnExit_Click"/>
                <TextBlock  Text="{Binding MeasureTypeInfo,Mode=TwoWay}" Foreground="#FFFFCF5C" FontSize="28" VerticalAlignment="Bottom"  HorizontalAlignment="Right" Margin="0,15,100,0"/>
                <TextBlock x:Name="txtCurrentTime" VerticalAlignment="Bottom" HorizontalAlignment="Left" FontSize="20" Foreground="#FFE4E0E0" Margin="5,16,5,0"/>
            </Grid>
            <Grid Grid.Row="1" Grid.RowSpan="3" >
                <Grid.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="{Binding LeftColor1,Mode=TwoWay}" Offset="0"/>
                        <!-- FF4040 FF060628  FF0B3D4A-->
                        <GradientStop Color="{Binding LeftColor2,Mode=TwoWay}" Offset="1"/>
                    </LinearGradientBrush>
                </Grid.Background>
                <!--<my:ScrollingTextControl x:Name="userNotic"  Content="" FontSize="27" Height="42" HorizontalAlignment="Left" Margin="194,7,0,0"  VerticalAlignment="Top" Width="593" Foreground="Red" />-->
                <!--<myImage:LEDForm x:Name="LEDShowForm" Height="42" HorizontalAlignment="Left" Margin="194,0,0,0"  VerticalAlignment="Top" Width="593"></myImage:LEDForm>-->
                <TextBlock x:Name="txtMsg2" VerticalAlignment="Top" HorizontalAlignment="Left"   Text="{Binding Msg2, Mode=TwoWay  }" FontWeight="Bold" FontSize="48" Foreground="#FFFF5447" Margin="0,50,-300,0" RenderTransformOrigin="0,0.5" SizeChanged="txtMsg2_SizeChanged">
                    <TextBlock.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </TextBlock.RenderTransform>
                </TextBlock>
                <Grid HorizontalAlignment="Right" Width="150">
                    <Grid.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="{Binding RightColor1,Mode=TwoWay}" Offset="0"/>
                            <!-- FF4040 FF060628  FF0B3D4A-->
                            <GradientStop Color="{Binding RightColor2,Mode=TwoWay}" Offset="1"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                </Grid>
                <TextBlock x:Name="txtMsg1" VerticalAlignment="Top" HorizontalAlignment="Left" Text="{Binding Msg1, Mode=TwoWay  }" FontSize="22" Foreground="#FFFFFFFF" Margin="5,20,0,0"/>
                <!--<Button x:Name="btnStart" Content="开始倒计时" HorizontalAlignment="Left" VerticalAlignment="Top" Height="30" Width="90" Click="btnStart_Click" Margin="250,20,0,0" Visibility="Hidden"/>-->
                <Grid x:Name="gridCountdown" Height="90" Width="90" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,26,50,0" IsVisibleChanged="gridCountdown_IsVisibleChanged" Visibility="{Binding TimeCountVisibility,Mode=TwoWay}"/>
                <Canvas x:Name="cancasNoticeMsg" VerticalAlignment="Top" HorizontalAlignment="Left" Background="DarkGreen" Height="46" ClipToBounds="True" Margin="130,8,0,0" Width="884">
                    <TextBlock x:Name="txtMsg3"  Foreground="#14FF14" FontSize="36"  SizeChanged="txtMsg3_SizeChanged"  Text="{Binding Msg3, Mode=TwoWay}" >
                        <TextBlock.RenderTransform>
                            <TransformGroup>
                                <TranslateTransform/>
                            </TransformGroup>
                        </TextBlock.RenderTransform>
                    </TextBlock>
                </Canvas>
            </Grid>
            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="420"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0" Margin="6,6,0,0" BorderThickness="1" BorderBrush="#FF2D3E56" CornerRadius="4">
                    <Border BorderThickness="1" BorderBrush="#FF1C2D47" CornerRadius="3">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="35"/>
                                <RowDefinition Height="245"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBlock x:Name="ShowClientName" Grid.Row="0" Text="{Binding ShowClientName, Mode=TwoWay}"  FontWeight="Bold" FontSize="30" Foreground="#FFFFCF5C"  VerticalAlignment="Top" HorizontalAlignment="Center" MouseRightButtonDown="ShowClientName_MouseRightButtonDown" />
                            <Border Grid.Row="1" Margin="15,20,15,0" CornerRadius="4" BorderBrush="#FF081A3B" BorderThickness="1">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF030714" Offset="0"/>
                                        <GradientStop Color="#FF0C2F48" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Grid Grid.Row="0">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="20"/>
                                        </Grid.RowDefinitions>
                                        <Image Grid.Row="0" Stretch="None" Name="img1" Height="38" Width="38" Source="{Binding leftLed,Mode=TwoWay}" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="24" />
                                        <Image Grid.Row="0" Stretch="None" Height="38" Width="38" Source="{Binding rightLed,Mode=TwoWay}" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="24" />
                                        <TextBlock Grid.Row="0" Text="{Binding Weight, Mode=TwoWay }"  Visibility="{Binding IsShowWeightInfo, Mode=TwoWay }" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,10,0,0" FontSize="68" FontFamily="Arial" Foreground="#FFFF5447"/>
                                        <Image Grid.Row="0" Stretch="None" Height="102" Width="298" Source="Image/chetiheng.png" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,0,0,20"/>
                                        <Image Grid.Row="0" x:Name="imgRedLineRight" Visibility="Hidden" Stretch="None" Height="94" Width="46" Source="Image/rightX.png" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="240,0,0,72">
                                            <i:Interaction.Triggers>
                                                <ei:DataTrigger Binding="{Binding IsRedLineRight}" Value="true">
                                                    <ei:ControlStoryboardAction Storyboard="{StaticResource SBRedLineRightBegin}"/>
                                                </ei:DataTrigger>
                                                <ei:DataTrigger Binding="{Binding IsRedLineRight}" Value="false">
                                                    <ei:ControlStoryboardAction Storyboard="{StaticResource SBRedLineRightStop}"/>
                                                </ei:DataTrigger>
                                            </i:Interaction.Triggers>
                                        </Image>
                                        <Image Grid.Row="0" x:Name="imgRedLineLeft" Visibility="Hidden" Stretch="None" Height="94" Width="46" Source="Image/leftX.png" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,0,244,74">
                                            <i:Interaction.Triggers>
                                                <ei:DataTrigger Binding="{Binding IsRedLineLeft}" Value="true">
                                                    <ei:ControlStoryboardAction Storyboard="{StaticResource SBRedLineLeftBegin}"/>
                                                </ei:DataTrigger>
                                                <ei:DataTrigger Binding="{Binding IsRedLineLeft}" Value="false">
                                                    <ei:ControlStoryboardAction Storyboard="{StaticResource SBRedLineLeftStop}"/>
                                                </ei:DataTrigger>
                                            </i:Interaction.Triggers>
                                        </Image>
                                        <Canvas Grid.Row="1"  Background="#FF678FA1" HorizontalAlignment="Left" Margin="25,0,0,0" Name="canvas1" VerticalAlignment="Top" Width="18">
                                            <Thumb Name="thumb1" Background="Red" Height="12" Width="19" DragDelta="DragDelta" DragStarted="DragStarted" DragCompleted="DragCompleted" Canvas.Left="-2" Canvas.Top="-1" RenderTransformOrigin="0.789,1.75" />
                                        </Canvas>
                                    </Grid>
                                </Grid>
                            </Border>
                            <Grid Grid.Row="2" VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Grid.Column="0" Orientation="Vertical" HorizontalAlignment="Center">
                                    <Image x:Name="imgTalk" Source="Image/yuyin.png" Stretch="None">
                                        <i:Interaction.Triggers>
                                            <ei:DataTrigger Binding="{Binding IsTalking}" Value="true">
                                                <ei:ControlStoryboardAction Storyboard="{StaticResource SBTalkBegin}"/>
                                            </ei:DataTrigger>
                                            <ei:DataTrigger Binding="{Binding IsTalking}" Value="false">
                                                <ei:ControlStoryboardAction Storyboard="{StaticResource SBTalkStop}"/>
                                            </ei:DataTrigger>
                                        </i:Interaction.Triggers>
                                    </Image>
                                    <TextBlock x:Name="txtTalk" Text="语音对讲关闭" Foreground="#FF34D7FE" FontSize="18" FontFamily="Microsoft YaHei" Margin="0,18,0,0"/>
                                </StackPanel>
                                <StackPanel Grid.Column="1" Orientation="Vertical" HorizontalAlignment="Center">
                                    <Image x:Name="imgMeasure" Source="Image/people.png" Stretch="None">
                                        <i:Interaction.Triggers>
                                            <ei:DataTrigger Binding="{Binding IsMeasuring}" Value="true">
                                                <ei:ControlStoryboardAction Storyboard="{StaticResource SBMeasureBegin}"/>
                                            </ei:DataTrigger>
                                            <ei:DataTrigger Binding="{Binding IsMeasuring}" Value="false">
                                                <ei:ControlStoryboardAction Storyboard="{StaticResource SBMeasureStop}"/>
                                            </ei:DataTrigger>
                                        </i:Interaction.Triggers>
                                    </Image>
                                    <TextBlock x:Name="txtMeasure" Text="远程计量" Foreground="#FFFEFFFF" FontSize="18" FontFamily="Microsoft YaHei" Margin="0,18,0,0"/>
                                </StackPanel>
                                <TextBlock  Text="{Binding UserDefineInfos,Mode=TwoWay}" TextWrapping="Wrap"   TextAlignment="Center"   Foreground="#FFFFCF5C" FontSize="25" FontFamily="Microsoft YaHei" Margin="3,148,0,-43" Grid.ColumnSpan="2"/>
                                <!--#region测试-->
                                <Button x:Name="TestSendTaskBtn"  Content="发送任务" Width="100" Height="25" Click="Button_Click" Margin="111,185,199,-60" Grid.ColumnSpan="2" RenderTransformOrigin="0.58,3.187"></Button>
                                <Button x:Name="testCardNoBtn" Content="测试" Click="Button_Click1" Margin="111,148,199,-35" Grid.ColumnSpan="2"/>
                                <TextBox x:Name="testCardNoTxt" Grid.Column="1" Foreground="White" Text="{Binding TestCardNo,Mode=TwoWay}"  Margin="12,149,79,-35" Height="Auto" Background="#FF111010"/>
                                <!--#endregion测试-->
                            </Grid>
                            <!--{Binding ShowClientName, Mode=TwoWay} 111111111111-->

                        </Grid>
                    </Border>

                </Border>
                <Border Grid.Column="1" Margin="6,6,6,0" BorderThickness="1" BorderBrush="#FF2D3E56" CornerRadius="4">
                    <Border BorderThickness="1" BorderBrush="#FF1C2D47" CornerRadius="3">
                        <Grid Margin="24,10,24,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="60"/>
                                <RowDefinition Height="60"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid Name="gridSupplier" Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="24"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="24"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="24"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBox  Grid.Column="0" Foreground="White" Text="{Binding ShowGrossb,Mode=TwoWay}" Style="{DynamicResource TextBoxStyle1}" Margin="0,0,0,0"/>
                                <TextBox Grid.Column="2" Foreground="White" Text="{Binding ShowTareb,Mode=TwoWay}" Style="{DynamicResource TextBoxStyle1}" Margin="0,0,0,0"/>
                                <TextBox Name="none" Grid.Column="4" Text="" Style="{DynamicResource TextBoxStyle1}" Margin="0,0,0,0"/>
                                <TextBox Grid.Column="6" Foreground="White"  Text="{Binding ShowSuttleb,Mode=TwoWay}" Style="{DynamicResource TextBoxStyle1}" Margin="0,0,0,0"/>
                            </Grid>
                            <Grid Name="gridMeasureWeight" Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="24"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="24"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="24"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBox x:Name="txtGrossWeight" Grid.Column="0"  Visibility="{Binding IsShowWeightInfo, Mode=TwoWay }"   Text="{Binding ShowGross,Mode=TwoWay}" Style="{DynamicResource TextBoxStyle1}" Margin="0,0,0,0"/>
                                <TextBlock Grid.Column="1" Text="-" FontSize="26" Foreground="White" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center"/>
                                <TextBox x:Name="txtTaireWeight" Grid.Column="2"  Visibility="{Binding IsShowWeightInfo, Mode=TwoWay }"  Text="{Binding ShowTare,Mode=TwoWay}" Style="{DynamicResource TextBoxStyle1}" Margin="0,0,0,0"/>
                                <TextBlock Name="txtMinusDeduction" Grid.Column="3" Text="-" FontSize="26" Foreground="White" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center"/>
                                <TextBox Name="txtDeduction" Grid.Column="4"  Visibility="{Binding IsShowWeightInfo, Mode=TwoWay }"  Text="{Binding ShowDeduction,Mode=TwoWay}" Style="{DynamicResource TextBoxStyle1}" Margin="0,0,0,0"/>
                                <TextBlock Name="txtEqualSuttle" Grid.Column="5" Text="=" FontSize="26" Foreground="White" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center"/>
                                <TextBox Name="txtSuttle"  Visibility="{Binding IsShowWeightInfo, Mode=TwoWay }"  Grid.Column="6" Text="{Binding ShowSuttle,Mode=TwoWay}" Style="{DynamicResource TextBoxStyle1}" Margin="0,0,0,0"/>
                            </Grid>
                            <Grid Name="gridMeasure"  Grid.Row="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="24"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="24"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="24"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="毛重" FontSize="22" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center"/>
                                <TextBlock Grid.Column="2" Text="皮重" FontSize="22" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center"/>
                                <TextBlock Name="lblDeduction" Grid.Column="4" Text="扣重" FontSize="22" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center"/>
                                <TextBlock Name="lblSuttle" Grid.Column="6" Text="净重" FontSize="22" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center"/>
                            </Grid>
                            <Grid Grid.Row="3" Name="rendergv">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="56"/>
                                    <RowDefinition Height="56"/>
                                    <RowDefinition Height="56"/>
                                    <RowDefinition Height="56"/>
                                </Grid.RowDefinitions>
                                <Border Grid.Row="0" BorderThickness="0,0,0,1" BorderBrush="#FF335365" Margin="-24,0">
                                    <Grid Margin="24,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="85"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="85"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0"   Text="车   号" Foreground="#FFFFCF5C" FontSize="22" VerticalAlignment="Bottom" Margin="0,0,0,10"/>
                                        <TextBlock Grid.Column="1" Text="{Binding CarTaskModel.BullInfo.carno,Mode=TwoWay}" Foreground="White"  FontSize="28" VerticalAlignment="Bottom" Margin="10,0,0,10"/>
                                        <TextBlock Grid.Column="2" Text="计划号" Foreground="#FFFFCF5C" FontSize="22" VerticalAlignment="Bottom" Margin="0,0,0,10"/>
                                        <TextBlock Grid.Column="3" Text="{Binding CarTaskModel.BullInfo.planid,Mode=TwoWay}" Foreground="White"  FontSize="28" VerticalAlignment="Bottom" Margin="10,0,0,10"/>
                                    </Grid>
                                </Border>
                                <Border Grid.Row="1" BorderThickness="0,0,0,1" BorderBrush="#FF335365" Margin="-24,0">
                                    <Grid Margin="24,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="85"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="85"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Grid.Column="0" Text="货    名" Foreground="#FFFFCF5C" FontSize="22" VerticalAlignment="Bottom" Margin="0,0,0,10"/>
                                        <TextBlock Grid.Column="1" Text="{Binding CarTaskModel.BullInfo.materialname,Mode=TwoWay}" Foreground="White"  FontSize="22" VerticalAlignment="Bottom" Margin="10,0,0,10"/>
                                        <TextBlock Grid.Column="2" Text="规    格" Foreground="#FFFFCF5C" FontSize="22" VerticalAlignment="Bottom" Margin="0,0,0,10"/>
                                        <TextBlock Grid.Column="3" Text="{Binding CarTaskModel.BullInfo.materialspec,Mode=TwoWay}" Foreground="White"  FontSize="22" VerticalAlignment="Bottom" Margin="10,0,0,10"/>
                                    </Grid>
                                </Border>
                                <Border Grid.Row="2" BorderThickness="0,0,0,1" BorderBrush="#FF335365" Margin="-24,0">
                                    <Grid Margin="24,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="85"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="85"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Text="供    货" Foreground="#FFFFCF5C" FontSize="22" VerticalAlignment="Bottom" Margin="0,0,0,10"/>
                                        <TextBlock Grid.Column="1" Text="{Binding CarTaskModel.BullInfo.sourcename,Mode=TwoWay}" Foreground="White"  FontSize="22" VerticalAlignment="Bottom" Margin="10,0,0,10" Grid.ColumnSpan="3"/>
                                    </Grid>
                                </Border>
                                <Border Grid.Row="3" BorderThickness="0,0,0,1" BorderBrush="#FF335365" Margin="-24,0">
                                    <Grid Margin="24,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="85"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="85"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Text="收    货" Foreground="#FFFFCF5C" FontSize="22" VerticalAlignment="Bottom" Margin="0,0,0,10"/>
                                        <TextBlock Grid.Column="1" Text="{Binding CarTaskModel.BullInfo.targetname,Mode=TwoWay}" Foreground="White"  FontSize="22" VerticalAlignment="Bottom" Margin="10,0,0,10" Grid.ColumnSpan="3"/>
                                    </Grid>
                                </Border>
                                <Border Grid.Row="4" BorderThickness="0,0,0,1" BorderBrush="#FF335365" Margin="-24,0">
                                    <Grid Margin="24,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="85"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="85"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Text="数    量" Foreground="#FFFFCF5C" FontSize="22" VerticalAlignment="Bottom" Margin="0,0,0,10"/>
                                        <TextBlock Grid.Column="1" Text="{Binding CarTaskModel.BullInfo.materialcount,Mode=TwoWay}" Foreground="White"  FontSize="22" VerticalAlignment="Bottom" Margin="10,0,0,10"/>
                                        <TextBlock Grid.Column="2" Text="发货量" Foreground="#FFFFCF5C" FontSize="22" VerticalAlignment="Bottom" Margin="0,0,0,10"/>
                                        <!--<TextBlock Grid.Column="3" Text="{Binding CarTaskModel.BullInfo.grossb,Mode=TwoWay}" Foreground="White"  FontSize="22" VerticalAlignment="Bottom" Margin="10,0,0,10"/>-->
                                        <!--lt 2016-1-28 13:31:06…… 由grossb修改为显示 planweight-->
                                        <TextBlock Grid.Column="3" Text="{Binding CarTaskModel.BullInfo.planweight,Mode=TwoWay}" Foreground="White"  FontSize="22" VerticalAlignment="Bottom" Margin="0,0,0,10"/>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Grid>
                    </Border>
                </Border>
            </Grid>
            <Grid Grid.Row="3">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                    <Image Source="Image/tlh.png" Stretch="Fill" VerticalAlignment="Center" Width="20" Height="20" HorizontalAlignment="Left" Margin="15,0,0,0" />
                    <TextBlock Text="山东天利和软件股份有限公司" Foreground="#FFDCEFF6" FontSize="14" VerticalAlignment="Center"/>
                    <TextBlock Text="版权所有" Foreground="#FFDCEFF6" FontSize="12" Margin="10,0,30,0" VerticalAlignment="Center"/>
                </StackPanel>
            </Grid>
            <TextBlock   x:Name="txtCountdown"     Text="{Binding countdown, Mode=TwoWay }"        Visibility="Hidden"  />
            <TextBlock   x:Name="txtRedLineLeft"   Text="{Binding isRedLineLeft, Mode=TwoWay }"    Visibility="Hidden"  />
            <TextBlock   x:Name="txtRedLineRight"  Text="{Binding isRedLineRight, Mode=TwoWay }"   Visibility="Hidden"  />
            <TextBlock   x:Name="txtisTalk"        Text="{Binding isTalk, Mode=TwoWay }"           Visibility="Hidden"  />
            <TextBlock   x:Name="txtRemoteMeasure" Text="{Binding isRemoteMeasure, Mode=TwoWay }"  Visibility="Hidden"  />
            <TextBox x:Name="CarNoTempTextBox" Visibility="Collapsed" Text="{Binding CarTaskModel.BullInfo.carno,Mode=TwoWay}" TextChanged="CarNoTempTextBox_TextChanged"/>
        </Grid>
        <TextBlock x:Name="lblCountdown" Text="6" FontSize="90" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,120,50,0" TextAlignment="Center" FontWeight="Bold" FontFamily="FangSong" Foreground="Gold" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed">
            <TextBlock.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleX="2" ScaleY="2"/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform X="-150" Y="150"/>
                </TransformGroup>
            </TextBlock.RenderTransform>
            <TextBlock.Effect>
                <DropShadowEffect Color="Orange"/>
            </TextBlock.Effect>
        </TextBlock>
        <TextBlock x:Name="fullScreenTb" Width="100" Height="30" IsEnabled="{Binding IsFullScreenEnable, Mode=TwoWay}" Background="Red" IsEnabledChanged="fullScreenTb_IsEnabledChanged" Visibility="Collapsed"/>
    </Grid>
</comm:Only_WindowBase>
