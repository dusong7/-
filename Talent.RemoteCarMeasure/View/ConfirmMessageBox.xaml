<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Controls="clr-namespace:Talent.ClientCommonLib.Controls;assembly=Talent.ClientCommonLib" x:Class="Talent.RemoteCarMeasure.View.ConfirmMessageBox"
        Title="提示信息" Height="250" Width="462" WindowStartupLocation="CenterScreen"
         FontFamily="Microsoft YaHei" WindowStyle="None"
        ResizeMode="NoResize" Background="#FF6DAEA6" MouseDown="Window_MouseLeftButtonDown">
    <Window.Resources>
        <Style x:Key="ImageButtonStyle" TargetType="{x:Type Controls:ImageButton}">
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Controls:ImageButton}">
                        <Border Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="borderHover">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="6*"/>
                                    <RowDefinition Height="4*"/>
                                </Grid.RowDefinitions>
                                <!--<Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="16"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>-->
                                <Border Grid.Column="0" Grid.ColumnSpan="2" x:Name="borderHover" Grid.RowSpan="2" Opacity="0" Background="#33FFFFFF"/>
                                <Image Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="0" Grid.RowSpan="2" Source="{TemplateBinding Image}" Margin="0,0,0,0"/>
                                <ContentPresenter Grid.Column="1" Grid.Row="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
            <Setter Property="Foreground" Value="Red"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="borderCheck">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF77D179"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="borderCheck">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="20"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked"/>
                                    <VisualState x:Name="Indeterminate"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <StackPanel Orientation="Horizontal">
                                <Grid Width="40" Height="20">
                                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                                        <Border x:Name="borderCheck" Width="16" Height="16" Background="LightGray" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="1,0" CornerRadius="1" RenderTransformOrigin="0.5,0.5">
                                            <Border.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Border.RenderTransform>
                                        </Border>
                                        <!--<Border x:Name="borderCheck" Width="16" Height="16" Background="#FF77D179" HorizontalAlignment="Left" VerticalAlignment="Center"/>-->
                                    </Border>
                                </Grid>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </StackPanel>
                        </BulletDecorator>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <!--ToolBorderWindow None  AllowsTransparency="True"-->
    <Grid Name="gridTitleBar">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="60"/>
        </Grid.RowDefinitions>
        <Button x:Name="btnClose" Visibility="Hidden"  ToolTip="关闭" VerticalAlignment="Top" Style="{StaticResource ExitButtonStyle}" 
                HorizontalAlignment="Right" Width="40" Height="40" Click="btnClose_Click" RenderTransformOrigin="3.95,0.325"  />
        <!--<Label Name="titileLable" HorizontalAlignment="Left" Margin="10,2,0,0" Content="提示" FontSize="17" Height="40" VerticalAlignment="Top"></Label>-->
        <!--<Label Name="msgLable" HorizontalAlignment="Left" Foreground="White" Margin="10,60,0,10" FontSize="20" VerticalAlignment="Stretch"></Label>-->
        <TextBlock x:Name="msgLable" TextWrapping="Wrap"   TextAlignment="Center" FontWeight="Bold" FontSize="25" Foreground="White" Margin="2,26,4,43" RenderTransformOrigin="0,0.5" Grid.RowSpan="2" ><InlineUIContainer>
        		
        	</InlineUIContainer></TextBlock>
        <!--<Button x:Name="btnClose" Grid.Column="2" Visibility="Visible"  ToolTip="关闭" VerticalAlignment="Top" Style="{StaticResource ExitButtonStyle}" HorizontalAlignment="Right" Width="40" Height="40" Margin="0,1,1,0" Click="btnClose_Click"/>-->
        <Button Content="显示明细" x:Name="showGridButton" Margin="2,11,377,9" Style="{StaticResource HandleButtonStyle}" Width="Auto" Height="40"
                Click="showGridButton_Click" Grid.Row="1"  Background="Yellow" Foreground="Black" Visibility="Hidden"/>
        <CheckBox x:Name="TareTimeOutCheckBox" Grid.Row="1" Grid.Column="0"  HorizontalAlignment="Right" VerticalAlignment="Center" 
                  Margin="0,14,263,13" FontSize="17" Foreground="#FF000000" Content="使用皮重" FontWeight="Bold" RenderTransformOrigin="3.538,0.846" 
                  Height="33" Style="{DynamicResource CheckBoxStyle1}" Width="110" Visibility="Hidden"/>
        <StackPanel Orientation="Horizontal" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Right">

            <Button Content=".." x:Name="okButton" Style="{StaticResource HandleButtonStyle}"  Width="120" Height="40" Click="okButton_Click"/>
            <Button Content=".." x:Name="cancelButton" Margin="10,0,10,0" Style="{StaticResource HandleButtonStyle}" Background="#FF87DC85" Width="120" Height="40" Click="cancelButton_Click"/>
        </StackPanel>

    </Grid>
</Window>
