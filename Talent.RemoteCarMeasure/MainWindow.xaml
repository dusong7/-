<pform:Only_WindowBase
        Name="SeatMainForm"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:myC="clr-namespace:Talent.ClientCommonLib.Controls;assembly=Talent.ClientCommonLib"
        xmlns:pform="clr-namespace:Talent.ClientCommonLib;assembly=Talent.ClientCommonLib"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
        mc:Ignorable="d" 
        x:Class="Talent.RemoteCarMeasure.MainWindow"
        xmlns:VM="clr-namespace:Talent.RemoteCarMeasure.ViewModel"
        Title="智能化远程集中计量管理系统" Height="640" Width="1000" WindowStyle="None" WindowStartupLocation="CenterScreen" 
        Icon="Image/SysImage/计量.ico" FontFamily="Arial,Microsoft YaHei" Activated="SeatMainForm_Activated"
        xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" IsEnabled="{Binding IsFormEnable}" Loaded="SeatMainForm_Loaded"
        IsEnabledChanged="SeatMainForm_IsEnabledChanged" KeyDown="SeatMainForm_KeyDown" Closing="SeatMainForm_Closing"
        >
    <pform:Only_WindowBase.Resources>
        <VM:RemoteCarMeasureViewModel x:Key="RemoteCarMeasureDataSource"/>
        <Style x:Key="ButtonStyleAutoMeasure" TargetType="{x:Type Button}">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="6">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="borderHover">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="70"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="26"/>
                                </Grid.RowDefinitions>
                                <Border x:Name="borderHover" Grid.RowSpan="3" Opacity="0" CornerRadius="6" Background="#FFF9F9F9"/>
                                <Image Grid.Row="0" Stretch="None" Source="Image/SysImage/auto_cal.png" Margin="0,10,0,0"/>
                                <ContentPresenter Grid.Row="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyleDataQuery" TargetType="{x:Type Button}">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="6">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="borderHover">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="70"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="26"/>
                                </Grid.RowDefinitions>
                                <Border x:Name="borderHover" Grid.RowSpan="3" Opacity="0" CornerRadius="6" Background="#FFF9F9F9"/>
                                <Image Grid.Row="0" Stretch="None" Source="Image/SysImage/data_que.png" Margin="0,10,0,0"/>
                                <ContentPresenter Grid.Row="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyleSysManage" TargetType="{x:Type Button}">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="6">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="borderHover">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="70"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="26"/>
                                </Grid.RowDefinitions>
                                <Border x:Name="borderHover" Grid.RowSpan="3" Opacity="0" CornerRadius="6" Background="#FFF9F9F9"/>
                                <Image Grid.Row="0" Stretch="None" Source="Image/SysImage/system_mana.png" Margin="0,10,0,0"/>
                                <ContentPresenter Grid.Row="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LabelStyle1" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="#FFEE786C"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStylePauseWeight" TargetType="{x:Type Button}">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="6">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="borderHover">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="70"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="26"/>
                                </Grid.RowDefinitions>
                                <Border x:Name="borderHover" Grid.RowSpan="3" Opacity="0" CornerRadius="6" Background="#FFF9F9F9"/>
                                <Image Grid.Row="0" Stretch="None" Source="Image/SysImage/pauseweight.png" Margin="0,10,0,0"/>
                                <ContentPresenter Grid.Row="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="SBAlarmBegin">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="imgAlarm" RepeatBehavior="Forever">
                <EasingDoubleKeyFrame KeyTime="0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BounceEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="6">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BounceEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BounceEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="-6">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BounceEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BounceEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BounceEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="SBAlarmStop">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="imgAlarm">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Style x:Key="HandleButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="48"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Background" Value="#FFEE786C"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="borderHover">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <CircleEase EasingMode="EaseIn"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border Background="{TemplateBinding Background}" CornerRadius="6"/>
                            <Border x:Name="borderHover" Background="#FFff8983" CornerRadius="6" Opacity="0"/>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
        <Style x:Key="GPRSCheckBoxStyle1" TargetType="{x:Type CheckBox}">
            <Setter Property="Width" Value="36"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#FFEE786C"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="normal">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="checked">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked"/>
                                    <VisualState x:Name="Indeterminate"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Image x:Name="normal" Stretch="Fill" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Source="Image/SysImage/GPRS_unlink.png" Visibility="Visible"/>
                            <Image x:Name="checked" Stretch="Fill" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Source="Image/SysImage/GPRS_link.png" Visibility="Collapsed"/>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ServerCheckBoxStyle1" TargetType="{x:Type CheckBox}">
            <Setter Property="Width" Value="36"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#FFEE786C"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="normal">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="checked">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked"/>
                                    <VisualState x:Name="Indeterminate"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Image x:Name="normal" Stretch="Fill" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Source="Image/SysImage/server_unlink.png" Visibility="Visible"/>
                            <Image x:Name="checked" Stretch="Fill" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Source="Image/SysImage/server_link.png" Visibility="Collapsed"/>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ContextMenuStyle" TargetType="{x:Type ContextMenu}">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border x:Name="Border" CornerRadius="0" Background="White"  BorderThickness="1" BorderBrush="#ffBABABA">
                            <ItemsPresenter Margin="0"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MenuItemStyle1" TargetType="{x:Type MenuItem}">
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border Background="{TemplateBinding Background}">
                            <Grid>
                                <Rectangle x:Name="Bg" Fill="Transparent"/>
                                <Label x:Name="header" Content="{TemplateBinding Header}" Margin="30,0"/>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter Property="Fill" TargetName="Bg" Value="#FF3B4D57"/>
                                <Setter Property="Foreground" TargetName="header" Value="White"/>
                                <!--<Setter Property="Stroke" TargetName="Bg" Value="#8071CBF1"/>
                                <Setter Property="Stroke" TargetName="InnerBorder" Value="#40FFFFFF"/>-->
                            </Trigger>
                            <!--<Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#FF9A9A9A"/>
                                <Setter Property="Background" TargetName="GlyphPanel" Value="#EEE9E9"/>
                                <Setter Property="BorderBrush" TargetName="GlyphPanel" Value="#DBD6D6"/>
                                <Setter Property="Fill" TargetName="Glyph" Value="#848589"/>
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MenuItemStyle2" TargetType="{x:Type MenuItem}">
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border Background="{TemplateBinding Background}">
                            <Grid>
                                <Rectangle x:Name="Bg" Fill="Transparent"/>
                                <Label x:Name="header" Content="{TemplateBinding Header}" Margin="30,0"/>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter Property="Fill" TargetName="Bg" Value="#FF3B4D57"/>
                                <Setter Property="Foreground" TargetName="header" Value="Red"/>
                                <!--<Setter Property="Stroke" TargetName="Bg" Value="#8071CBF1"/>
                                <Setter Property="Stroke" TargetName="InnerBorder" Value="#40FFFFFF"/>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </pform:Only_WindowBase.Resources>

    <pform:Only_WindowBase.DataContext>
        <Binding Source="{StaticResource RemoteCarMeasureDataSource}"/>
    </pform:Only_WindowBase.DataContext>
    <Grid>
        <Grid.Background>
            <LinearGradientBrush EndPoint="1,0.4" StartPoint="0,0.6">
                <!--<GradientStop Color="#FF528DAD"/>
                <GradientStop Color="#FF6DAEA6" Offset="1"/>-->
                <GradientStop Color="{Binding BColor0,Mode=TwoWay}"/>
                <GradientStop Color="{Binding BColor1,Mode=TwoWay}" Offset="1"/>
            </LinearGradientBrush>
        </Grid.Background>
        <Grid.RowDefinitions>
            <RowDefinition Height="76"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="250"/>
            <RowDefinition Height="36"/>
        </Grid.RowDefinitions>
        <Button x:Name="btnLogout" HorizontalAlignment="Right" Margin="0,0,67,0" VerticalAlignment="Top" Command="{Binding SystemLoginOutCommand,Mode=OneWay}" Style="{DynamicResource LogoutButtonStyle}"/>
        <Button x:Name="btnMinimize" HorizontalAlignment="Right" Margin="0,0,35,0" VerticalAlignment="Top" Click="btnMinimize_Click" Style="{DynamicResource MinButtonStyle}"/>
        <Button x:Name="btnClose" HorizontalAlignment="Right" Margin="0,0,0,0" VerticalAlignment="Top" Command="{Binding SystemCloseCommand, Mode=OneWay}" Style="{DynamicResource CloseButtonStyle}"/>
        <Grid Grid.Row="0" Name="gridTitleBar">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="30,0,25,0">
                <Image Source="Image/SysImage/rzgt.png" Stretch="Fill" VerticalAlignment="Top" Width="40" Height="40" HorizontalAlignment="Left" Margin="5,2,0,0"/>
                <TextBlock FontSize="28" Foreground="White" FontWeight="Bold" VerticalAlignment="Center" Margin="10,0,0,0">
                    <Run Text="智能化远程集中计量管理系统"/>
                    <InlineUIContainer>
					<TextBlock x:Name="txtVer"  Foreground="Yellow" FontSize="16" />
				</InlineUIContainer>
                </TextBlock>
            </StackPanel>
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,40,0">
                <myC:StatusControl Width="48" Height="48" ImageFalse="Image/SysImage/GPRS_unlink.png" ImageTrue="Image/SysImage/GPRS_link.png" Visibility="Hidden" State="True" ToolTip="GPRS连接状态" Margin="10,0,0,0"/>
                <Image VerticalAlignment="Center" Source="Image/SysImage/ChangeSkin.png" Stretch="Fill"  Margin="20,0,0,0" RenderTransformOrigin="-1.375,0.5" Height="28" Width="32" ToolTip="换肤" MouseLeftButtonDown="Image_MouseLeftButtonDown"/>
                <myC:StatusControl Width="48" Height="48" ImageFalse="Image/SysImage/server_unlink.png" ImageTrue="Image/SysImage/server_link.png" State="{Binding TaskServerConnState, Mode=TwoWay}" ToolTip="任务服务器连接状态"/>
                <Image VerticalAlignment="Center" Source="Image/SysImage/time_icon.png" Stretch="None" Margin="20,0,0,0"/>
                <TextBlock Text="{Binding SysTime, Mode=TwoWay}" Foreground="White" FontSize="15" VerticalAlignment="Center" Margin="8,0,0,0"/>
                <Image VerticalAlignment="Center" Source="Image/SysImage/usr_icon.png" Stretch="None" Margin="30,0,0,0"/>
                <TextBlock x:Name="SeatNameTextBlock" Text="2号坐席" Foreground="White" FontSize="15" VerticalAlignment="Center" Margin="8,0,0,0"/>
            </StackPanel>
            <TextBlock Text="{Binding LoginStateInfo,Mode=TwoWay}" Margin="0,0,40,0" FontSize="15" HorizontalAlignment="Right" Foreground="Red" VerticalAlignment="Bottom" Visibility="Hidden"></TextBlock>
        </Grid>
        <Grid Grid.Row="1" Margin="25,0,25,25">
            <TabControl x:Name="weightTabControl" Template="{DynamicResource OfficeTabControl}">
                <TabItem Header="汽车衡">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                        <ItemsControl x:Name="items1" ItemsSource="{Binding CarWeighterClientInfos,Mode=TwoWay}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <myC:WeighterPanel BorderBrush="#FF6D7E86" WeighterName="{Binding ClientName,Mode=OneWay}" RightLightState="{Binding RightLightState,Mode=OneWay}" LeftLightState="{Binding LeftLightState,Mode=OneWay}" Weight="{Binding Weight,Mode=OneWay}" 
                                                           WeighterState="{Binding ClientState,Mode=OneWay}" WeightMsg="{Binding WeightMsg,Mode=OneWay}" LeftLine="{Binding LeftLine, Mode=OneWay}" RightLine="{Binding RightLine, Mode=OneWay}"  >
                                            <myC:WeighterPanel.ContextMenu>
                                                <ContextMenu DataContext="{StaticResource RemoteCarMeasureDataSource}" Style="{DynamicResource ContextMenuStyle}">
                                                    <MenuItem Header="监控" Command="{Binding VideoMonitorCommand}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource MenuItemStyle1}"/>
                                                    <MenuItem Header="清零" Command="{Binding MeasureWeightClearCommand}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}" FontWeight="Bold" Style="{DynamicResource MenuItemStyle2}"  />
                                                    <MenuItem Header="重启" Command="{Binding MeasureClientRestartCommand}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource MenuItemStyle1}"/>
                                                    <!--<MenuItem Header="更新" Visibility="Hidden" Command="{Binding MeasureClientUpdateCommand}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource MenuItemStyle1}"/>-->
                                                    <MenuItem Header="停用" Command="{Binding MeasureClientStopCommand}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource MenuItemStyle1}"/>
                                                    <MenuItem Header="全屏" Command="{Binding FullScreenCommand}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource MenuItemStyle2}"/>
                                                </ContextMenu>
                                            </myC:WeighterPanel.ContextMenu>
                                        </myC:WeighterPanel>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="火车衡" Visibility="Hidden">
                </TabItem>
                <TabItem Header="铁水衡" Visibility="Hidden"/>
            </TabControl>
            <TextBlock VerticalAlignment="Top" HorizontalAlignment="Right" Text="{Binding ClientStateInfo,Mode=TwoWay}" FontSize="24" Foreground="#FFED796A" FontWeight="Bold" Margin="0,8,20,0"/>
        </Grid>
        <Grid Grid.Row="2" Margin="25,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="400"/>
            </Grid.ColumnDefinitions>
            <myC:ExtendGroupBox Header="分配的任务" Icon="Image/SysImage/task_title.png" HeaderBackground="#FF5F7173" Margin="277,-224,306,234" Name="NewTaskGrid" Grid.ColumnSpan="2" Height="260" Width="450">
                <Grid IsEnabled="{Binding IsControlEnable,Mode=TwoWay}">
                    <Image x:Name="imgAlarm" Source="Image/SysImage/bell.png" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.12">
                        <Image.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Image.RenderTransform>
                        <i:Interaction.Triggers>
                            <ei:DataTrigger Binding="{Binding IsBellMove,Mode=TwoWay}" Value="true">
                                <ei:ControlStoryboardAction Storyboard="{StaticResource SBAlarmBegin}"/>
                            </ei:DataTrigger>
                            <ei:DataTrigger Binding="{Binding IsBellMove,Mode=TwoWay}" Value="false">
                                <ei:ControlStoryboardAction Storyboard="{StaticResource SBAlarmStop}"/>
                            </ei:DataTrigger>
                        </i:Interaction.Triggers>
                    </Image>
                    <TextBlock Text="{Binding SelectedTask.ClientName,Mode=TwoWay}" ToolTip="{Binding SelectedTask.ClientName,Mode=TwoWay}" TextTrimming="CharacterEllipsis" Foreground="#FF5D7172" TextWrapping="Wrap" FontSize="30" FontWeight="Bold" Margin="154,32,0,0" VerticalAlignment="Top" Width="190"/>
                    <TextBlock Text="{Binding SelectedTask.ErrorMsg,Mode=TwoWay}" ToolTip="{Binding SelectedTask.ErrorMsg,Mode=TwoWay}" TextTrimming="CharacterEllipsis" Foreground="#FFEE786C" FontSize="18" FontWeight="Bold" Margin="188,88,0,0" VerticalAlignment="Top" Width="160"/>
                    <Button Content="点击处理" ToolTip="Enter" Name="handleTaskButton" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="188,130,0,0" Command="{Binding TaskProcessCommand}" Style="{DynamicResource HandleButtonStyle}"/>
                    <TextBlock Text="{Binding AcceptTaskTime,Mode=TwoWay}" Foreground="#FFEE786C" FontSize="18" FontWeight="Bold" Margin="34,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="100" TextAlignment="Center"/>
                </Grid>
            </myC:ExtendGroupBox>
            <myC:ExtendGroupBox Grid.Column="0" Header="等待的任务" Icon="Image/SysImage/task_waiting_title.png" HeaderBackground="#FFEE786C" Grid.ColumnSpan="2" Margin="0,0,-4,0">
                <DataGrid x:Name="dgTest" CanUserSortColumns="False" ColumnWidth="*" CanUserResizeRows="False" CanUserResizeColumns="True" 
                          AutoGenerateColumns="False" SelectionMode="Single" CanUserReorderColumns="False" ColumnHeaderHeight="0"
                          ItemsSource="{Binding TaskInfos,Mode=TwoWay}" SelectedItem="{Binding selectTaskInfo,Mode=TwoWay }">
                    <DataGrid.ContextMenu>
                        <ContextMenu Name="dgmenu1" StaysOpen="true">
                            <MenuItem Header="获取任务" ToolTip="获取任务列表任务" ><!--Command="{Binding GetSelectTaskInfoCommand,Mode=TwoWay}" CommandParameter="{Binding}"-->
                            </MenuItem>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding CreateTime,StringFormat='HH:mm:ss'}" Width="100"/>
                        <DataGridTextColumn Binding="{Binding ClientName}" FontWeight="Bold" Width="100" />
                        <DataGridTextColumn Binding="{Binding CarNumber}" FontWeight="Bold" Foreground="#FFEB8169" Width="100"/>
                        <DataGridTextColumn Binding="{Binding BussinessTypeName}"  Width="150"/>
                        <DataGridTextColumn Binding="{Binding MeasureType}"  Width="80"/>
                        <DataGridTextColumn Binding="{Binding ErrorMsg}" MinWidth="150" Width="*"/>
                    </DataGrid.Columns>
                </DataGrid>
            </myC:ExtendGroupBox>
            <Label Grid.Column="0" VerticalAlignment="Top" HorizontalAlignment="Left" Content="{Binding TaskCount,Mode=TwoWay}" FontWeight="Bold" FontSize="14" Margin="130,10,0,0" Style="{DynamicResource LabelStyle1}"/>
        </Grid>
        <Grid Grid.Row="3">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,25,0">
                <Image Source="Image/SysImage/logo.png" Stretch="Fill" VerticalAlignment="Center" Width="20" Height="20" HorizontalAlignment="Left" Margin="0,0,0,0" RenderTransformOrigin="-0.8,0.6" />
                <TextBlock Text="山东天利和软件股份有限公司" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14" Foreground="White" />
            </StackPanel>
        </Grid>
        <Border x:Name="borderRoot" Grid.Row="1" Grid.RowSpan="2" Cursor="Hand"
                                Background="#33000000" Width="22" Height="110" VerticalAlignment="Top" 
                                HorizontalAlignment="Right" Margin="0,200,0,0" CornerRadius="6,0,0,6" MouseEnter="borderRoot_MouseEnter">
            <Grid>
                <Border Background="#FFe5e5e5" Width="12" Height="2" RenderTransformOrigin="0.5,0.5">
                    <Border.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="60"/>
                            <TranslateTransform Y="4"/>
                        </TransformGroup>
                    </Border.RenderTransform>
                </Border>
                <Border Background="#FFe5e5e5" Width="12" Height="2" RenderTransformOrigin="0.5,0.5">
                    <Border.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="-60"/>
                            <TranslateTransform Y="-4"/>
                        </TransformGroup>
                    </Border.RenderTransform>
                </Border>
            </Grid>
        </Border>
        <Popup x:Name="Pop_Parent" PopupAnimation="Fade" PlacementTarget="{Binding ElementName=borderRoot}" 
                               Placement="Center" AllowsTransparency="True" StaysOpen="False" IsOpen="False" HorizontalOffset="-40" Margin="0,200">
            <Grid x:Name="gridMenu" Grid.Row="1" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="5" Margin="0,0,0,0" HorizontalAlignment="Right">
                <Border Background="#CC000000" CornerRadius="6,0,0,6" Margin="0,20,0,40">
                    <ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" HorizontalContentAlignment="Center" VerticalContentAlignment="Top" VerticalAlignment="Center" >
                        <ItemsControl x:Name="itemsControlMenu">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Vertical" Margin="0,10"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <myC:ImageButton x:Name="btnPop1" MouseEnter="btnPop1_MouseEnter" Content="系统管理" Image="Image/SysImage/system_mana.png" Style="{DynamicResource ImageButtonHasChildrenStyle}" IsEnabled="{Binding IsControlEnable_SysManager,Mode=TwoWay}"/>

                            <Border Height="1" Background="#33FFFFFF"/>

                            <myC:ImageButton x:Name="btnPop2" MouseEnter="btnPop2_MouseEnter" Content="数据查询" Image="Image/SysImage/data_que.png" Style="{DynamicResource ImageButtonHasChildrenStyle}" IsEnabled="{Binding IsControlEnable_DataSelect,Mode=TwoWay}"/>

                            <Border Height="1" Background="#33FFFFFF"/>

                            <!--<myC:ImageButton Content="系统管理" Image="Image/SysImage/system_mana.png" Command="{Binding ReadDataCommand}" IsEnabled="{Binding IsControlEnable,Mode=TwoWay}"/>-->

                            <Border Height="1" Background="#33FFFFFF"/>

                            <myC:ImageButton MouseEnter="btnPop_MouseEnter" Content="{Binding PauseButtonText,Mode=TwoWay}" Image="Image/SysImage/pauseweight.png" Command="{Binding WeighterCommand}"/>
                        </ItemsControl>
                    </ScrollViewer>
                </Border>
                <Popup x:Name="Pop_Child1" MouseLeave="Pop_Child_MouseLeave" PopupAnimation="Scroll" Width="120" PlacementTarget="{Binding ElementName=btnPop1}" Placement="Left" AllowsTransparency="True" StaysOpen="False" IsOpen="False">
                    <Border Background="White">
                        <StackPanel Margin="0,10">
                            <Button Content="修改密码" Name="ModifyPasswordButton" Click="ModifyPasswordButton_Click" Style="{DynamicResource PopupButtonStyle}"/>
                            <Button Content="关注终端" Name="AttentionsButton" Click="AttentionsButton_Click" Style="{DynamicResource PopupButtonStyle}"/>
                            <Button Content="发送通知" Name="SendNoticeButton" Click="SendNoticeButton_Click" Style="{DynamicResource PopupButtonStyle}"/>
                        </StackPanel>
                    </Border>
                </Popup>

                <Popup x:Name="Pop_Child2" MouseLeave="Pop_Child_MouseLeave" PopupAnimation="Scroll" Width="120" PlacementTarget="{Binding ElementName=btnPop2}" Placement="Left" AllowsTransparency="True" StaysOpen="False" IsOpen="False">
                    <Border Background="White">
                        <StackPanel Margin="0,10">
                            <Button x:Name="btnQueryData" Click="btnQueryData_Click" Content="数据查询" Style="{DynamicResource PopupButtonStyle}"/>
                            <Button x:Name="btnTaskCount" Click="btnTaskCount_Click" Content="任务统计" Style="{DynamicResource PopupButtonStyle}"/>
                            <Button x:Name="btnWeightLine" Click="btnWeightLine_Click" Content="重量曲线" Style="{DynamicResource PopupButtonStyle}"/>
                        </StackPanel>
                    </Border>
                </Popup>
            </Grid>
        </Popup>
    </Grid>
</pform:Only_WindowBase>
