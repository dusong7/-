<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
        xmlns:myC="clr-namespace:Talent.ClientCommonLib.Controls;assembly=Talent.ClientCommonLib" 
        xmlns:VM="clr-namespace:Talent.RemoteCarMeasure.ViewModel"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="Talent.RemoteCarMeasure.Login"
        Title="智能化远程集中计量管理系统" Height="444" Width="780"
        Background="{x:Null}" AllowsTransparency="True" WindowState="Normal"
        FontFamily="Microsoft YaHei" Icon="Image/SysImage/计量.ico" 
        WindowStartupLocation="CenterScreen" WindowStyle="None" ResizeMode="NoResize" 
        MouseLeftButtonDown="Window_MouseLeftButtonDown" KeyDown="Window_KeyDown"
        >
    <Window.Resources>
        <VM:LoginViewModel x:Key="LoginViewModelDataSource"/>
        <Style x:Key="LoginButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Width" Value="32"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="ToolTip" Value="登录"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="imgNormal">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="imgMourseOver">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="imgNormal">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="imgMourseOver">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Image x:Name="imgNormal" Visibility="Visible" Source="Image/SysImage/BtnLoginBK1.png"/>
                            <Image x:Name="imgMourseOver" Visibility="Collapsed" Source="Image/SysImage/BtnLoginBK2.png"/>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
            <Setter Property="Foreground" Value="Red"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="borderCheck">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF77D179"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="borderCheck">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="20"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked"/>
                                    <VisualState x:Name="Indeterminate"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <StackPanel Orientation="Horizontal">
                                <Grid Width="40" Height="20">
                                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                                        <Border x:Name="borderCheck" Width="16" Height="16" Background="LightGray" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="1,0" CornerRadius="1" RenderTransformOrigin="0.5,0.5">
                                            <Border.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Border.RenderTransform>
                                        </Border>
                                        <!--<Border x:Name="borderCheck" Width="16" Height="16" Background="#FF77D179" HorizontalAlignment="Left" VerticalAlignment="Center"/>-->
                                    </Border>
                                </Grid>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </StackPanel>
                        </BulletDecorator>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="StoryboardCar" RepeatBehavior="Forever">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="car">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="-150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1.9" Value="-220"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.2" Value="-290"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.8" Value="-440"/>
                <EasingDoubleKeyFrame KeyTime="0:0:3.2" Value="-470"/>
                <EasingDoubleKeyFrame KeyTime="0:0:3.6" Value="-470"/>
                <EasingDoubleKeyFrame KeyTime="0:0:4.2" Value="-530"/>
                <EasingDoubleKeyFrame KeyTime="0:0:4.6" Value="-636"/>
                <EasingDoubleKeyFrame KeyTime="0:0:5.4" Value="-740"/>
                <EasingDoubleKeyFrame KeyTime="0:0:6" Value="-945"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="car">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1.9" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:5.4" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:6" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:6" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="scales">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:6" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:6.5" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:6" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:6.5" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="car">
                <EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1.9" Value="12"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.2" Value="12"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.4" Value="4"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.8" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:4.2" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:4.6" Value="-12"/>
                <EasingDoubleKeyFrame KeyTime="0:0:4.9" Value="-10"/>
                <EasingDoubleKeyFrame KeyTime="0:0:5.4" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="car">
                <EasingDoubleKeyFrame KeyTime="0:0:1.9" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.2" Value="-16"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.4" Value="-24"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2.8" Value="-26"/>
                <EasingDoubleKeyFrame KeyTime="0:0:4.2" Value="-26"/>
                <EasingDoubleKeyFrame KeyTime="0:0:4.6" Value="-22"/>
                <EasingDoubleKeyFrame KeyTime="0:0:5.4" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <StringAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Text)" Storyboard.TargetName="textBlock">
                <DiscreteStringKeyFrame KeyTime="0" Value="0"/>
                <DiscreteStringKeyFrame KeyTime="0:0:3.2" Value="417"/>
                <DiscreteStringKeyFrame KeyTime="0:0:3.3" Value="9698"/>
                <DiscreteStringKeyFrame KeyTime="0:0:3.4" Value="24916"/>
                <DiscreteStringKeyFrame KeyTime="0:0:3.5" Value="31760"/>
            </StringAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    <Window.DataContext>
        <Binding Source="{StaticResource LoginViewModelDataSource}"/>
    </Window.DataContext>
    <Window.OpacityMask>
        <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,0">
            <GradientStop Color="#00000000" Offset="0"/>
            <GradientStop Color="#00000000" Offset="1"/>
            <GradientStop Color="#00000000" Offset="1"/>
        </LinearGradientBrush>
    </Window.OpacityMask>
    <Window.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation From="1" To="0" Duration="0:0:0.3" Storyboard.TargetProperty="OpacityMask.(GradientBrush.GradientStops)[1].Offset"/>
                    <DoubleAnimation From="1" To="0" Duration="0:0:0.3" BeginTime="0:0:0.1" Storyboard.TargetProperty="OpacityMask.(GradientBrush.GradientStops)[2].Offset"/>
                    <ColorAnimation To="#FF000000" Duration="0" Storyboard.TargetProperty="OpacityMask.(GradientBrush.GradientStops)[2].Color"/>
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Window.Triggers>
    <Grid>
        <Viewport3D>
            <Viewport3D.Camera>
                <PerspectiveCamera Position="0 0 942" LookDirection="0 0 -1" NearPlaneDistance="50"/>
            </Viewport3D.Camera>
            <ContainerUIElement3D>
                <!-- 三维变换 -->
                <ContainerUIElement3D.Transform>
                    <RotateTransform3D CenterX="0.5" CenterY="0.5" CenterZ="0.5">
                        <RotateTransform3D.Rotation>
                            <AxisAngleRotation3D x:Name="axr" Angle="0" Axis="0 1 0"/>
                        </RotateTransform3D.Rotation>
                    </RotateTransform3D>
                </ContainerUIElement3D.Transform>
                <Viewport2DVisual3D>
                    <Viewport2DVisual3D.Geometry>
                        <MeshGeometry3D Positions="-390,172,0 -390,-172,0 390,-172,0 390,172,0" TriangleIndices="0 1 2  0 2 3" TextureCoordinates="0,0 0,1 1,1 1,0"/>
                    </Viewport2DVisual3D.Geometry>
                    <Viewport2DVisual3D.Material>
                        <DiffuseMaterial Viewport2DVisual3D.IsVisualHostMaterial="True"/>
                    </Viewport2DVisual3D.Material>
                    <Grid x:Name="layoutroot" Height="344" Width="780">
                        <Grid.Resources>
                            <Storyboard x:Key="std">
                                <DoubleAnimation From="1" To="0" Duration="0:0:0.2"
									Storyboard.TargetName="layoutroot"
									Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].Offset"/>
                                <DoubleAnimation Duration="0:0:0.2" BeginTime="0:0:0.05" From="1" To="0"
									Storyboard.TargetName="layoutroot"
									Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].Offset"/>
                                <ColorAnimation Duration="0" To="#00000000" Storyboard.TargetName="layoutroot"
									Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].Color"/>
                            </Storyboard>
                        </Grid.Resources>
                        <Grid.OpacityMask>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FF000000" Offset="0"/>
                                <GradientStop Color="#FF000000" Offset="1"/>
                                <GradientStop Color="#FF000000" Offset="1"/>
                            </LinearGradientBrush>
                        </Grid.OpacityMask>
                        <Grid.Background>
                            <ImageBrush ImageSource="Image/SysImage/LoginBK.png"/>
                        </Grid.Background>
                        <Button x:Name="btnMinimize" HorizontalAlignment="Right" Margin="0,4,45,0" VerticalAlignment="Top" Click="btnMinimize_Click" Style="{DynamicResource MinButtonStyle}"/>
                        <Button x:Name="btnClose" HorizontalAlignment="Right" Margin="0,4,13,-20" VerticalAlignment="Top" Click="btnClose_Click" Style="{DynamicResource CloseButtonStyle}"/>
                        <Image Source="Image/SysImage/rzgt.png" Stretch="Fill" VerticalAlignment="Top" Width="40" Height="40" HorizontalAlignment="Left" Margin="46,40,0,0"/>
                        <TextBlock Text="智能化远程集中计量管理系统" FontSize="24" Margin="92,40,0,0" Foreground="White" FontWeight="Bold" VerticalAlignment="Top" HorizontalAlignment="Left">
                            <InlineUIContainer>
					<TextBlock x:Name="txtVer" Text="" Foreground="Yellow" FontSize="16" />
				</InlineUIContainer>
                        </TextBlock>
                        <Grid Width="240" HorizontalAlignment="Right" Margin="0,0,65,0">
                            <myC:WatermarkTextBox x:Name="txtUserName"
								Width="240" 
								Height="42" 
								BorderBrush="{x:Null}" 
								BorderThickness="0" 
								Background="White"
								Margin="0,40,0,0" 
								FontSize="14" 
								Padding="5,0"
								VerticalContentAlignment="Center"
								VerticalAlignment="Top" 
								Text="{Binding UserName, Mode=TwoWay}" 
								Watermark="用户名" 
								Visibility="{Binding ShowInput}"/>
                            <PasswordBox x:Name="txtPassword" 
								Width="240" 
								Height="42" 
								BorderBrush="{x:Null}" 
								BorderThickness="0" 
								Background="White"
								Margin="0,110,0,0"
								FontSize="14" 
								Padding="5,0"
								VerticalContentAlignment="Center" 
								VerticalAlignment="Top" 
								myC:PasswordBoxAssistant.BindPassword="true" 
								myC:PasswordBoxAssistant.BoundPassword="{Binding Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								myC:WatermarkTextBox.Watermark="密码" 
								Visibility="{Binding ShowInput}"/>
                            <CheckBox x:Name="checkBoxSave" IsChecked="{Binding IsSaveUser}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,180,0,0" Content="   记住此用户" FontSize="14" Foreground="#FF000000" Visibility="{Binding ShowInput}" Style="{DynamicResource CheckBoxStyle1}"/>
                            <Button x:Name="btnLogin"                 
								Height="44" 
								Width="241" 
								Command="{Binding LoginCommand}" 
								Click="btnLogin_Click"
								HorizontalAlignment="Center"
								VerticalAlignment="Top"
								Margin="0,220,0,0"
								Style="{DynamicResource LoginButtonStyle}"
								Visibility="{Binding ShowInput}"/>
                            <TextBlock x:Name="lblMsg" VerticalAlignment="Top" 
								Margin="0,272,0,0"
								FontSize="14"
								TextWrapping="Wrap" Foreground="Red"
								Text="{Binding ErrMsg, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left"/>
                            <StackPanel Orientation="Horizontal" Margin="0,296,0,0" HorizontalAlignment="Center" VerticalAlignment="Top" >
                                <TextBlock Text="技术支持：" Foreground="#EF214B59" FontWeight="Bold" FontFamily="Arial,Microsoft YaHei"/>
                                <TextBlock Text="山东天利和软件股份有限公司" Foreground="#EF214B59" FontFamily="Arial,Microsoft YaHei"/>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </Viewport2DVisual3D>
                <Viewport2DVisual3D>
                    <Viewport2DVisual3D.Geometry>
                        <MeshGeometry3D Positions="390 172 0  390 -172 0  -390 -172 0  -390 172 0" TriangleIndices="0 1 2  0 2 3" TextureCoordinates="0,0 0,1 1,1 1,0"/>
                    </Viewport2DVisual3D.Geometry>
                    <Viewport2DVisual3D.Material>
                        <DiffuseMaterial Viewport2DVisual3D.IsVisualHostMaterial="True"/>
                    </Viewport2DVisual3D.Material>
                    <Grid x:Name="layoutroot2" Height="344" Width="780">
                        <Grid.Resources>
                            <Storyboard x:Key="std2">
                                <DoubleAnimation From="1" To="0" Duration="0:0:0.2"
									Storyboard.TargetName="layoutroot2"
									Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].Offset"/>
                                <DoubleAnimation Duration="0:0:0.2" BeginTime="0:0:0.05" From="1" To="0"
									Storyboard.TargetName="layoutroot2"
									Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].Offset"/>
                                <ColorAnimation Duration="0" To="#00000000" Storyboard.TargetName="layoutroot2"
									Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].Color"/>
                            </Storyboard>
                        </Grid.Resources>
                        <Grid.OpacityMask>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FF000000" Offset="0"/>
                                <GradientStop Color="#FF000000" Offset="1"/>
                                <GradientStop Color="#FF000000" Offset="1"/>
                            </LinearGradientBrush>
                        </Grid.OpacityMask>
                        <Grid.Background>
                            <ImageBrush ImageSource="Image/SysImage/LoginBK2.png"/>
                        </Grid.Background>
                        <Button x:Name="btnMinimize1" HorizontalAlignment="Right" Margin="0,4,44,0" VerticalAlignment="Top" Click="btnMinimize1_Click" Style="{DynamicResource MinButtonStyle}"/>
                        <Button x:Name="btnClose1" HorizontalAlignment="Right" Margin="0,4,12,0" VerticalAlignment="Top" Click="btnClose1_Click" Style="{DynamicResource CloseButtonStyle}"/>
                    </Grid>
                </Viewport2DVisual3D>
            </ContainerUIElement3D>
            <ModelVisual3D>
                <ModelVisual3D.Content>
                    <DirectionalLight Color="Transparent"/>
                </ModelVisual3D.Content>
            </ModelVisual3D>
        </Viewport3D>
        <!--<Button x:Name="btnLeft" VerticalAlignment="Bottom" HorizontalAlignment="Left" Content="向左" Click="btnLeft_Click"/>
		<Button x:Name="btnRight" VerticalAlignment="Bottom" HorizontalAlignment="Right" Content="向右" Click="btnRight_Click"/>-->
        <Image x:Name="scales" Source="Image/SysImage/LoginScales.png" Opacity="0" Stretch="None" Margin="0,200,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        <Image x:Name="car" Source="Image/SysImage/LoginCar.png" Opacity="0" Stretch="None" Margin="0,140,-160,0" HorizontalAlignment="Right" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
            <Image.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Image.RenderTransform>
        </Image>
        <Border x:Name="border" Opacity="0" Background="#FF3B4D57" Width="120" Height="50" BorderThickness="2" BorderBrush="Gray" Margin="0,-180,0,0">
            <TextBlock x:Name="textBlock" Foreground="White" FontSize="28" Text="0" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10"/>
        </Border>
        <TextBlock x:Name="StoryBoardTextBlock" IsEnabled="{Binding StoryBoardEnable, Mode=TwoWay}" IsEnabledChanged="StoryBoardTextBlock_IsEnabledChanged" Visibility="Collapsed"></TextBlock>
    </Grid>
</Window>
